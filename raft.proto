syntax = "proto3";

message Entry {
        int32 term = 1;
        string command = 2;
}

service RaftNode {
        rpc RequestVote(RequestVoteArgs) returns (ResultWithTerm);
        rpc AppendEntries(AppendEntriesArgs) returns (ResultWithTerm);
        rpc GetLeader(NoArgs) returns (LeaderResp);
        rpc Suspend(DurationArgs) returns (NoArgs);
        rpc SetVal(SetValArgs) returns (ConditionArg);
        rpc GetVal(GetValArg) returns (ValConditionArg);
}

message NoArgs {}

message RequestVoteArgs {
        int32 term = 1;
        int32 candidateId = 2;
        int32 lastLogIndex = 3;
        int32 lastLogTerm = 4;
}

message AppendEntriesArgs {
        int32 term = 1;
        int32 leaderId = 2;
        int32 prevLogIndex = 3;
        int32 prevLogTerm = 4;
        repeated Entry entries = 5;
        int32 leaderCommit = 6;
}

message ResultWithTerm {
        int32 term = 1;
        bool result = 2;
}

message DurationArgs {
        int32 duration = 1;
}

message LeaderResp {
        int32 leader_id = 1;
        string leader_addr = 2;
}

message SetValArgs {
        string key = 1;
        string val = 2;
}

message GetValArg {
        string key_val = 1;
}

message ConditionArg {
        bool cond = 1;
}

message ValConditionArg {
        bool cond = 1;
        string val = 2; 
}